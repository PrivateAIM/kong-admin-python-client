# coding: utf-8

"""
    Kong Admin API

    OpenAPI 3.0 spec for Kong Gateway's open source Admin API.  You can know more about Kong Gateway at [docs.konghq.com](https://docs.konghq.com) .Give Kong a star at [Kong/kong](https://github.com/kong/kong) repository.

    The version of the OpenAPI document: 3.5.0
    Contact: docs@konghq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kong_admin_client.models.upstream import Upstream

class TestUpstream(unittest.TestCase):
    """Upstream unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Upstream:
        """Test Upstream
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Upstream`
        """
        model = Upstream()
        if include_optional:
            return Upstream(
                algorithm = 'round-robin',
                client_certificate = kong_admin_client.models.upstream_client_certificate.Upstream_client_certificate(
                    id = '', ),
                created_at = 56,
                hash_fallback = 'none',
                hash_fallback_header = '',
                hash_fallback_query_arg = '',
                hash_fallback_uri_capture = '',
                hash_on = 'none',
                hash_on_cookie = '',
                hash_on_cookie_path = '/',
                hash_on_header = '',
                hash_on_query_arg = '',
                hash_on_uri_capture = '',
                healthchecks = kong_admin_client.models.upstream_healthchecks.Upstream_healthchecks(
                    active = kong_admin_client.models.upstream_healthchecks_active.Upstream_healthchecks_active(
                        concurrency = 56, 
                        headers = kong_admin_client.models.headers.headers(), 
                        healthy = kong_admin_client.models.upstream_healthchecks_active_healthy.Upstream_healthchecks_active_healthy(
                            http_statuses = [
                                56
                                ], 
                            interval = 1.337, 
                            successes = 56, ), 
                        http_path = '/', 
                        https_sni = '', 
                        https_verify_certificate = True, 
                        timeout = 1.337, 
                        type = 'http', 
                        unhealthy = kong_admin_client.models.upstream_healthchecks_active_unhealthy.Upstream_healthchecks_active_unhealthy(
                            http_failures = 56, 
                            interval = 1.337, 
                            tcp_failures = 56, 
                            timeouts = 56, ), ), 
                    passive = kong_admin_client.models.upstream_healthchecks_passive.Upstream_healthchecks_passive(
                        type = 'http', ), 
                    threshold = 1.337, ),
                host_header = '',
                id = '',
                name = '',
                slots = 56,
                tags = [
                    ''
                    ],
                use_srv_name = True
            )
        else:
            return Upstream(
        )
        """

    def testUpstream(self):
        """Test Upstream"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
