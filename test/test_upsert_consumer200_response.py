# coding: utf-8

"""
    Kong Admin API

    OpenAPI 3.0 spec for Kong Gateway's open source Admin API.  You can know more about Kong Gateway at [docs.konghq.com](https://docs.konghq.com) .Give Kong a star at [Kong/kong](https://github.com/kong/kong) repository.

    The version of the OpenAPI document: 3.5.0
    Contact: docs@konghq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kong_admin_client.models.upsert_consumer200_response import UpsertConsumer200Response

class TestUpsertConsumer200Response(unittest.TestCase):
    """UpsertConsumer200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpsertConsumer200Response:
        """Test UpsertConsumer200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpsertConsumer200Response`
        """
        model = UpsertConsumer200Response()
        if include_optional:
            return UpsertConsumer200Response(
                data = [
                    kong_admin_client.models.upsert_consumer_200_response_data_inner.upsert_consumer_200_response_data_inner(
                        id = 'a4407883-c166-43fd-80ca-3ca035b0cdb7', 
                        created_at = 1422386534, 
                        username = 'my-username', 
                        custom_id = 'my-custom-id', 
                        tags = [
                            'admin'
                            ], )
                    ],
                next = 'http://localhost:8001/consumers?offset=6378122c-a0a1-438d-a5c6-efabae9fb969'
            )
        else:
            return UpsertConsumer200Response(
        )
        """

    def testUpsertConsumer200Response(self):
        """Test UpsertConsumer200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
