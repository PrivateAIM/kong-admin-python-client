# coding: utf-8

"""
    Kong Admin API

    OpenAPI 3.0 spec for Kong Gateway's open source Admin API.  You can know more about Kong Gateway at [docs.konghq.com](https://docs.konghq.com) .Give Kong a star at [Kong/kong](https://github.com/kong/kong) repository.

    The version of the OpenAPI document: 3.5.0
    Contact: docs@konghq.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from kong_admin_client.models.filter_chain import FilterChain

class TestFilterChain(unittest.TestCase):
    """FilterChain unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilterChain:
        """Test FilterChain
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilterChain`
        """
        model = FilterChain()
        if include_optional:
            return FilterChain(
                created_at = 56,
                enabled = True,
                filters = [
                    kong_admin_client.models.filter_chain_filters_inner.Filter_chain_filters_inner(
                        name = '', 
                        config = null, 
                        enabled = True, )
                    ],
                id = '',
                name = '',
                route = kong_admin_client.models.filter_chain_route.Filter_chain_route(
                    id = '', ),
                service = kong_admin_client.models.filter_chain_service.Filter_chain_service(
                    id = '', ),
                tags = [
                    ''
                    ],
                updated_at = 56
            )
        else:
            return FilterChain(
        )
        """

    def testFilterChain(self):
        """Test FilterChain"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
